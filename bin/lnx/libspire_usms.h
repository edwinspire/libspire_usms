/* libspire_usms.h generated by valac 0.16.1, the Vala compiler, do not modify */


#ifndef ___HOME_EDWINSPIRE_PROGRAMACION_PROYECTOSSOFTWARE_SOFTWARE_VALA_PROYECTOSVALA_PROYECTS_LIBSPIRE_USMS_BIN_LNX_LIBSPIRE_USMS_H__
#define ___HOME_EDWINSPIRE_PROGRAMACION_PROYECTOSSOFTWARE_SOFTWARE_VALA_PROYECTOSVALA_PROYECTS_LIBSPIRE_USMS_BIN_LNX_LIBSPIRE_USMS_H__

#include <glib.h>
#include <stdlib.h>
#include <string.h>
#include "libspire_gsm.h"
#include "libspire_serial.h"
#include <glib-object.h>
#include <libxml/tree.h>
#include <libxml/parser.h>
#include <float.h>
#include <math.h>
#include <gee.h>
#include "libspire_uhttp.h"
#include <gio/gio.h>
#include "libspire_pg.h"
#include "libspire_pdu.h"

G_BEGIN_DECLS


#define EDWINSPIRE_USMS_TYPE_CALL_ACTION (edwinspire_usms_call_action_get_type ())

#define EDWINSPIRE_USMS_TYPE_PROCESS_CTRL (edwinspire_usms_process_ctrl_get_type ())

#define EDWINSPIRE_USMS_TYPE_PROCESS_SMS_OUT (edwinspire_usms_process_sms_out_get_type ())

#define EDWINSPIRE_USMS_TYPE_DEVICE (edwinspire_usms_device_get_type ())
#define EDWINSPIRE_USMS_DEVICE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_DEVICE, edwinspireuSMSDevice))
#define EDWINSPIRE_USMS_DEVICE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_DEVICE, edwinspireuSMSDeviceClass))
#define EDWINSPIRE_USMS_IS_DEVICE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_DEVICE))
#define EDWINSPIRE_USMS_IS_DEVICE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_DEVICE))
#define EDWINSPIRE_USMS_DEVICE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_DEVICE, edwinspireuSMSDeviceClass))

typedef struct _edwinspireuSMSDevice edwinspireuSMSDevice;
typedef struct _edwinspireuSMSDeviceClass edwinspireuSMSDeviceClass;
typedef struct _edwinspireuSMSDevicePrivate edwinspireuSMSDevicePrivate;

#define EDWINSPIRE_USMS_TYPE_SERIAL_PORT_CONF (edwinspire_usms_serial_port_conf_get_type ())
#define EDWINSPIRE_USMS_SERIAL_PORT_CONF(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_SERIAL_PORT_CONF, edwinspireuSMSSerialPortConf))
#define EDWINSPIRE_USMS_SERIAL_PORT_CONF_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_SERIAL_PORT_CONF, edwinspireuSMSSerialPortConfClass))
#define EDWINSPIRE_USMS_IS_SERIAL_PORT_CONF(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_SERIAL_PORT_CONF))
#define EDWINSPIRE_USMS_IS_SERIAL_PORT_CONF_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_SERIAL_PORT_CONF))
#define EDWINSPIRE_USMS_SERIAL_PORT_CONF_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_SERIAL_PORT_CONF, edwinspireuSMSSerialPortConfClass))

typedef struct _edwinspireuSMSSerialPortConf edwinspireuSMSSerialPortConf;
typedef struct _edwinspireuSMSSerialPortConfClass edwinspireuSMSSerialPortConfClass;

#define EDWINSPIRE_USMS_TYPE_XML_DATAS (edwinspire_usms_xml_datas_get_type ())
#define EDWINSPIRE_USMS_XML_DATAS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_XML_DATAS, edwinspireuSMSXmlDatas))
#define EDWINSPIRE_USMS_XML_DATAS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_XML_DATAS, edwinspireuSMSXmlDatasClass))
#define EDWINSPIRE_USMS_IS_XML_DATAS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_XML_DATAS))
#define EDWINSPIRE_USMS_IS_XML_DATAS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_XML_DATAS))
#define EDWINSPIRE_USMS_XML_DATAS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_XML_DATAS, edwinspireuSMSXmlDatasClass))

typedef struct _edwinspireuSMSXmlDatas edwinspireuSMSXmlDatas;
typedef struct _edwinspireuSMSXmlDatasClass edwinspireuSMSXmlDatasClass;
typedef struct _edwinspireuSMSXmlDatasPrivate edwinspireuSMSXmlDatasPrivate;

#define EDWINSPIRE_USMS_TYPE_XML_ROW (edwinspire_usms_xml_row_get_type ())
#define EDWINSPIRE_USMS_XML_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_XML_ROW, edwinspireuSMSXmlRow))
#define EDWINSPIRE_USMS_XML_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_XML_ROW, edwinspireuSMSXmlRowClass))
#define EDWINSPIRE_USMS_IS_XML_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_XML_ROW))
#define EDWINSPIRE_USMS_IS_XML_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_XML_ROW))
#define EDWINSPIRE_USMS_XML_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_XML_ROW, edwinspireuSMSXmlRowClass))

typedef struct _edwinspireuSMSXmlRow edwinspireuSMSXmlRow;
typedef struct _edwinspireuSMSXmlRowClass edwinspireuSMSXmlRowClass;
typedef struct _edwinspireuSMSXmlRowPrivate edwinspireuSMSXmlRowPrivate;
typedef struct _edwinspireuSMSSerialPortConfPrivate edwinspireuSMSSerialPortConfPrivate;

#define EDWINSPIRE_USMS_TYPE_USMS_DATA_BASE (edwinspire_usms_usms_data_base_get_type ())
#define EDWINSPIRE_USMS_USMS_DATA_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_USMS_DATA_BASE, edwinspireuSMSuSMSDataBase))
#define EDWINSPIRE_USMS_USMS_DATA_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_USMS_DATA_BASE, edwinspireuSMSuSMSDataBaseClass))
#define EDWINSPIRE_USMS_IS_USMS_DATA_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_USMS_DATA_BASE))
#define EDWINSPIRE_USMS_IS_USMS_DATA_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_USMS_DATA_BASE))
#define EDWINSPIRE_USMS_USMS_DATA_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_USMS_DATA_BASE, edwinspireuSMSuSMSDataBaseClass))

typedef struct _edwinspireuSMSuSMSDataBase edwinspireuSMSuSMSDataBase;
typedef struct _edwinspireuSMSuSMSDataBaseClass edwinspireuSMSuSMSDataBaseClass;
typedef struct _edwinspireuSMSuSMSDataBasePrivate edwinspireuSMSuSMSDataBasePrivate;

#define EDWINSPIRE_USMS_TYPE_USMS_SERVER (edwinspire_usms_usms_server_get_type ())
#define EDWINSPIRE_USMS_USMS_SERVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_USMS_SERVER, edwinspireuSMSuSMSServer))
#define EDWINSPIRE_USMS_USMS_SERVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_USMS_SERVER, edwinspireuSMSuSMSServerClass))
#define EDWINSPIRE_USMS_IS_USMS_SERVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_USMS_SERVER))
#define EDWINSPIRE_USMS_IS_USMS_SERVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_USMS_SERVER))
#define EDWINSPIRE_USMS_USMS_SERVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_USMS_SERVER, edwinspireuSMSuSMSServerClass))

typedef struct _edwinspireuSMSuSMSServer edwinspireuSMSuSMSServer;
typedef struct _edwinspireuSMSuSMSServerClass edwinspireuSMSuSMSServerClass;
typedef struct _edwinspireuSMSuSMSServerPrivate edwinspireuSMSuSMSServerPrivate;

#define EDWINSPIRE_USMS_TYPE_TABLE_ROW_POSTGRES (edwinspire_usms_table_row_postgres_get_type ())
typedef struct _edwinspireuSMSTableRowPostgres edwinspireuSMSTableRowPostgres;

#define EDWINSPIRE_USMS_TYPE_TABLE_POSTGRES (edwinspire_usms_table_postgres_get_type ())
#define EDWINSPIRE_USMS_TABLE_POSTGRES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_TABLE_POSTGRES, edwinspireuSMSTablePostgres))
#define EDWINSPIRE_USMS_TABLE_POSTGRES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_TABLE_POSTGRES, edwinspireuSMSTablePostgresClass))
#define EDWINSPIRE_USMS_IS_TABLE_POSTGRES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_TABLE_POSTGRES))
#define EDWINSPIRE_USMS_IS_TABLE_POSTGRES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_TABLE_POSTGRES))
#define EDWINSPIRE_USMS_TABLE_POSTGRES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_TABLE_POSTGRES, edwinspireuSMSTablePostgresClass))

typedef struct _edwinspireuSMSTablePostgres edwinspireuSMSTablePostgres;
typedef struct _edwinspireuSMSTablePostgresClass edwinspireuSMSTablePostgresClass;
typedef struct _edwinspireuSMSTablePostgresPrivate edwinspireuSMSTablePostgresPrivate;

#define EDWINSPIRE_USMS_TYPE_PROCESS_CONTROLDB (edwinspire_usms_process_controldb_get_type ())
#define EDWINSPIRE_USMS_PROCESS_CONTROLDB(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_PROCESS_CONTROLDB, edwinspireuSMSProcessControldb))
#define EDWINSPIRE_USMS_PROCESS_CONTROLDB_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_PROCESS_CONTROLDB, edwinspireuSMSProcessControldbClass))
#define EDWINSPIRE_USMS_IS_PROCESS_CONTROLDB(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_PROCESS_CONTROLDB))
#define EDWINSPIRE_USMS_IS_PROCESS_CONTROLDB_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_PROCESS_CONTROLDB))
#define EDWINSPIRE_USMS_PROCESS_CONTROLDB_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_PROCESS_CONTROLDB, edwinspireuSMSProcessControldbClass))

typedef struct _edwinspireuSMSProcessControldb edwinspireuSMSProcessControldb;
typedef struct _edwinspireuSMSProcessControldbClass edwinspireuSMSProcessControldbClass;
typedef struct _edwinspireuSMSProcessControldbPrivate edwinspireuSMSProcessControldbPrivate;

#define EDWINSPIRE_USMS_TYPE_TABLE_PROCESS_CONTROL (edwinspire_usms_table_process_control_get_type ())
#define EDWINSPIRE_USMS_TABLE_PROCESS_CONTROL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_TABLE_PROCESS_CONTROL, edwinspireuSMSTableProcessControl))
#define EDWINSPIRE_USMS_TABLE_PROCESS_CONTROL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_TABLE_PROCESS_CONTROL, edwinspireuSMSTableProcessControlClass))
#define EDWINSPIRE_USMS_IS_TABLE_PROCESS_CONTROL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_TABLE_PROCESS_CONTROL))
#define EDWINSPIRE_USMS_IS_TABLE_PROCESS_CONTROL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_TABLE_PROCESS_CONTROL))
#define EDWINSPIRE_USMS_TABLE_PROCESS_CONTROL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_TABLE_PROCESS_CONTROL, edwinspireuSMSTableProcessControlClass))

typedef struct _edwinspireuSMSTableProcessControl edwinspireuSMSTableProcessControl;
typedef struct _edwinspireuSMSTableProcessControlClass edwinspireuSMSTableProcessControlClass;
typedef struct _edwinspireuSMSTableProcessControlPrivate edwinspireuSMSTableProcessControlPrivate;

#define EDWINSPIRE_USMS_TYPE_TABLE_SERIAL_PORT (edwinspire_usms_table_serial_port_get_type ())
#define EDWINSPIRE_USMS_TABLE_SERIAL_PORT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_TABLE_SERIAL_PORT, edwinspireuSMSTableSerialPort))
#define EDWINSPIRE_USMS_TABLE_SERIAL_PORT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_TABLE_SERIAL_PORT, edwinspireuSMSTableSerialPortClass))
#define EDWINSPIRE_USMS_IS_TABLE_SERIAL_PORT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_TABLE_SERIAL_PORT))
#define EDWINSPIRE_USMS_IS_TABLE_SERIAL_PORT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_TABLE_SERIAL_PORT))
#define EDWINSPIRE_USMS_TABLE_SERIAL_PORT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_TABLE_SERIAL_PORT, edwinspireuSMSTableSerialPortClass))

typedef struct _edwinspireuSMSTableSerialPort edwinspireuSMSTableSerialPort;
typedef struct _edwinspireuSMSTableSerialPortClass edwinspireuSMSTableSerialPortClass;
typedef struct _edwinspireuSMSTableSerialPortPrivate edwinspireuSMSTableSerialPortPrivate;

#define EDWINSPIRE_USMS_TYPE_SQL_FUN_RETURN (edwinspire_usms_sql_fun_return_get_type ())
#define EDWINSPIRE_USMS_SQL_FUN_RETURN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_SQL_FUN_RETURN, edwinspireuSMSSQLFunReturn))
#define EDWINSPIRE_USMS_SQL_FUN_RETURN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_SQL_FUN_RETURN, edwinspireuSMSSQLFunReturnClass))
#define EDWINSPIRE_USMS_IS_SQL_FUN_RETURN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_SQL_FUN_RETURN))
#define EDWINSPIRE_USMS_IS_SQL_FUN_RETURN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_SQL_FUN_RETURN))
#define EDWINSPIRE_USMS_SQL_FUN_RETURN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_SQL_FUN_RETURN, edwinspireuSMSSQLFunReturnClass))

typedef struct _edwinspireuSMSSQLFunReturn edwinspireuSMSSQLFunReturn;
typedef struct _edwinspireuSMSSQLFunReturnClass edwinspireuSMSSQLFunReturnClass;
typedef struct _edwinspireuSMSSQLFunReturnPrivate edwinspireuSMSSQLFunReturnPrivate;

#define EDWINSPIRE_USMS_TYPE_POSTGRE_SQL_CONNECTION (edwinspire_usms_postgre_sql_connection_get_type ())
#define EDWINSPIRE_USMS_POSTGRE_SQL_CONNECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_POSTGRE_SQL_CONNECTION, edwinspireuSMSPostgreSQLConnection))
#define EDWINSPIRE_USMS_POSTGRE_SQL_CONNECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_POSTGRE_SQL_CONNECTION, edwinspireuSMSPostgreSQLConnectionClass))
#define EDWINSPIRE_USMS_IS_POSTGRE_SQL_CONNECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_POSTGRE_SQL_CONNECTION))
#define EDWINSPIRE_USMS_IS_POSTGRE_SQL_CONNECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_POSTGRE_SQL_CONNECTION))
#define EDWINSPIRE_USMS_POSTGRE_SQL_CONNECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_POSTGRE_SQL_CONNECTION, edwinspireuSMSPostgreSQLConnectionClass))

typedef struct _edwinspireuSMSPostgreSQLConnection edwinspireuSMSPostgreSQLConnection;
typedef struct _edwinspireuSMSPostgreSQLConnectionClass edwinspireuSMSPostgreSQLConnectionClass;
typedef struct _edwinspireuSMSPostgreSQLConnectionPrivate edwinspireuSMSPostgreSQLConnectionPrivate;

#define EDWINSPIRE_USMS_TYPE_POSTGRESU_SMS (edwinspire_usms_postgresu_sms_get_type ())
#define EDWINSPIRE_USMS_POSTGRESU_SMS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_POSTGRESU_SMS, edwinspireuSMSPostgresuSMS))
#define EDWINSPIRE_USMS_POSTGRESU_SMS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_POSTGRESU_SMS, edwinspireuSMSPostgresuSMSClass))
#define EDWINSPIRE_USMS_IS_POSTGRESU_SMS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_POSTGRESU_SMS))
#define EDWINSPIRE_USMS_IS_POSTGRESU_SMS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_POSTGRESU_SMS))
#define EDWINSPIRE_USMS_POSTGRESU_SMS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_POSTGRESU_SMS, edwinspireuSMSPostgresuSMSClass))

typedef struct _edwinspireuSMSPostgresuSMS edwinspireuSMSPostgresuSMS;
typedef struct _edwinspireuSMSPostgresuSMSClass edwinspireuSMSPostgresuSMSClass;
typedef struct _edwinspireuSMSPostgresuSMSPrivate edwinspireuSMSPostgresuSMSPrivate;

#define EDWINSPIRE_USMS_TYPE_TABLE_PROVIDER (edwinspire_usms_table_provider_get_type ())
#define EDWINSPIRE_USMS_TABLE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_TABLE_PROVIDER, edwinspireuSMSTableProvider))
#define EDWINSPIRE_USMS_TABLE_PROVIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_TABLE_PROVIDER, edwinspireuSMSTableProviderClass))
#define EDWINSPIRE_USMS_IS_TABLE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_TABLE_PROVIDER))
#define EDWINSPIRE_USMS_IS_TABLE_PROVIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_TABLE_PROVIDER))
#define EDWINSPIRE_USMS_TABLE_PROVIDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_TABLE_PROVIDER, edwinspireuSMSTableProviderClass))

typedef struct _edwinspireuSMSTableProvider edwinspireuSMSTableProvider;
typedef struct _edwinspireuSMSTableProviderClass edwinspireuSMSTableProviderClass;
typedef struct _edwinspireuSMSTableProviderPrivate edwinspireuSMSTableProviderPrivate;

#define EDWINSPIRE_USMS_TYPE_SMS_OUT_ROW (edwinspire_usms_sms_out_row_get_type ())
#define EDWINSPIRE_USMS_SMS_OUT_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_SMS_OUT_ROW, edwinspireuSMSSMSOutRow))
#define EDWINSPIRE_USMS_SMS_OUT_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_SMS_OUT_ROW, edwinspireuSMSSMSOutRowClass))
#define EDWINSPIRE_USMS_IS_SMS_OUT_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_SMS_OUT_ROW))
#define EDWINSPIRE_USMS_IS_SMS_OUT_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_SMS_OUT_ROW))
#define EDWINSPIRE_USMS_SMS_OUT_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_SMS_OUT_ROW, edwinspireuSMSSMSOutRowClass))

typedef struct _edwinspireuSMSSMSOutRow edwinspireuSMSSMSOutRow;
typedef struct _edwinspireuSMSSMSOutRowClass edwinspireuSMSSMSOutRowClass;
typedef struct _edwinspireuSMSSMSOutRowPrivate edwinspireuSMSSMSOutRowPrivate;

#define EDWINSPIRE_USMS_TYPE_TABLE_CALL_IN (edwinspire_usms_table_call_in_get_type ())
#define EDWINSPIRE_USMS_TABLE_CALL_IN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_TABLE_CALL_IN, edwinspireuSMSTableCallIn))
#define EDWINSPIRE_USMS_TABLE_CALL_IN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_TABLE_CALL_IN, edwinspireuSMSTableCallInClass))
#define EDWINSPIRE_USMS_IS_TABLE_CALL_IN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_TABLE_CALL_IN))
#define EDWINSPIRE_USMS_IS_TABLE_CALL_IN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_TABLE_CALL_IN))
#define EDWINSPIRE_USMS_TABLE_CALL_IN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_TABLE_CALL_IN, edwinspireuSMSTableCallInClass))

typedef struct _edwinspireuSMSTableCallIn edwinspireuSMSTableCallIn;
typedef struct _edwinspireuSMSTableCallInClass edwinspireuSMSTableCallInClass;
typedef struct _edwinspireuSMSTableCallInPrivate edwinspireuSMSTableCallInPrivate;

#define EDWINSPIRE_USMS_TYPE_TABLE_INCOMING_CALLS (edwinspire_usms_table_incoming_calls_get_type ())
#define EDWINSPIRE_USMS_TABLE_INCOMING_CALLS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_TABLE_INCOMING_CALLS, edwinspireuSMSTableIncomingCalls))
#define EDWINSPIRE_USMS_TABLE_INCOMING_CALLS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_TABLE_INCOMING_CALLS, edwinspireuSMSTableIncomingCallsClass))
#define EDWINSPIRE_USMS_IS_TABLE_INCOMING_CALLS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_TABLE_INCOMING_CALLS))
#define EDWINSPIRE_USMS_IS_TABLE_INCOMING_CALLS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_TABLE_INCOMING_CALLS))
#define EDWINSPIRE_USMS_TABLE_INCOMING_CALLS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_TABLE_INCOMING_CALLS, edwinspireuSMSTableIncomingCallsClass))

typedef struct _edwinspireuSMSTableIncomingCalls edwinspireuSMSTableIncomingCalls;
typedef struct _edwinspireuSMSTableIncomingCallsClass edwinspireuSMSTableIncomingCallsClass;
typedef struct _edwinspireuSMSTableIncomingCallsPrivate edwinspireuSMSTableIncomingCallsPrivate;

#define EDWINSPIRE_USMS_TYPE_TABLE_CONTACTS (edwinspire_usms_table_contacts_get_type ())
#define EDWINSPIRE_USMS_TABLE_CONTACTS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_TABLE_CONTACTS, edwinspireuSMSTableContacts))
#define EDWINSPIRE_USMS_TABLE_CONTACTS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_TABLE_CONTACTS, edwinspireuSMSTableContactsClass))
#define EDWINSPIRE_USMS_IS_TABLE_CONTACTS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_TABLE_CONTACTS))
#define EDWINSPIRE_USMS_IS_TABLE_CONTACTS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_TABLE_CONTACTS))
#define EDWINSPIRE_USMS_TABLE_CONTACTS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_TABLE_CONTACTS, edwinspireuSMSTableContactsClass))

typedef struct _edwinspireuSMSTableContacts edwinspireuSMSTableContacts;
typedef struct _edwinspireuSMSTableContactsClass edwinspireuSMSTableContactsClass;
typedef struct _edwinspireuSMSTableContactsPrivate edwinspireuSMSTableContactsPrivate;

#define EDWINSPIRE_USMS_TYPE_TABLE_SMS_IN (edwinspire_usms_table_sms_in_get_type ())
#define EDWINSPIRE_USMS_TABLE_SMS_IN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_TABLE_SMS_IN, edwinspireuSMSTableSMSIn))
#define EDWINSPIRE_USMS_TABLE_SMS_IN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_TABLE_SMS_IN, edwinspireuSMSTableSMSInClass))
#define EDWINSPIRE_USMS_IS_TABLE_SMS_IN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_TABLE_SMS_IN))
#define EDWINSPIRE_USMS_IS_TABLE_SMS_IN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_TABLE_SMS_IN))
#define EDWINSPIRE_USMS_TABLE_SMS_IN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_TABLE_SMS_IN, edwinspireuSMSTableSMSInClass))

typedef struct _edwinspireuSMSTableSMSIn edwinspireuSMSTableSMSIn;
typedef struct _edwinspireuSMSTableSMSInClass edwinspireuSMSTableSMSInClass;
typedef struct _edwinspireuSMSTableSMSInPrivate edwinspireuSMSTableSMSInPrivate;

#define EDWINSPIRE_USMS_TYPE_TABLE_SMS_OUT (edwinspire_usms_table_sms_out_get_type ())
#define EDWINSPIRE_USMS_TABLE_SMS_OUT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_TABLE_SMS_OUT, edwinspireuSMSTableSMSOut))
#define EDWINSPIRE_USMS_TABLE_SMS_OUT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_TABLE_SMS_OUT, edwinspireuSMSTableSMSOutClass))
#define EDWINSPIRE_USMS_IS_TABLE_SMS_OUT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_TABLE_SMS_OUT))
#define EDWINSPIRE_USMS_IS_TABLE_SMS_OUT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_TABLE_SMS_OUT))
#define EDWINSPIRE_USMS_TABLE_SMS_OUT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_TABLE_SMS_OUT, edwinspireuSMSTableSMSOutClass))

typedef struct _edwinspireuSMSTableSMSOut edwinspireuSMSTableSMSOut;
typedef struct _edwinspireuSMSTableSMSOutClass edwinspireuSMSTableSMSOutClass;
typedef struct _edwinspireuSMSTableSMSOutPrivate edwinspireuSMSTableSMSOutPrivate;

#define EDWINSPIRE_USMS_TYPE_PHONE_TABLE_ROW (edwinspire_usms_phone_table_row_get_type ())
typedef struct _edwinspireuSMSPhoneTableRow edwinspireuSMSPhoneTableRow;

#define EDWINSPIRE_USMS_TYPE_PROVIDER_TABLE (edwinspire_usms_provider_table_get_type ())
#define EDWINSPIRE_USMS_PROVIDER_TABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_PROVIDER_TABLE, edwinspireuSMSProviderTable))
#define EDWINSPIRE_USMS_PROVIDER_TABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_PROVIDER_TABLE, edwinspireuSMSProviderTableClass))
#define EDWINSPIRE_USMS_IS_PROVIDER_TABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_PROVIDER_TABLE))
#define EDWINSPIRE_USMS_IS_PROVIDER_TABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_PROVIDER_TABLE))
#define EDWINSPIRE_USMS_PROVIDER_TABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_PROVIDER_TABLE, edwinspireuSMSProviderTableClass))

typedef struct _edwinspireuSMSProviderTable edwinspireuSMSProviderTable;
typedef struct _edwinspireuSMSProviderTableClass edwinspireuSMSProviderTableClass;
typedef struct _edwinspireuSMSProviderTablePrivate edwinspireuSMSProviderTablePrivate;

#define EDWINSPIRE_USMS_TYPE_PHONE_TABLE (edwinspire_usms_phone_table_get_type ())
#define EDWINSPIRE_USMS_PHONE_TABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), EDWINSPIRE_USMS_TYPE_PHONE_TABLE, edwinspireuSMSPhoneTable))
#define EDWINSPIRE_USMS_PHONE_TABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), EDWINSPIRE_USMS_TYPE_PHONE_TABLE, edwinspireuSMSPhoneTableClass))
#define EDWINSPIRE_USMS_IS_PHONE_TABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), EDWINSPIRE_USMS_TYPE_PHONE_TABLE))
#define EDWINSPIRE_USMS_IS_PHONE_TABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), EDWINSPIRE_USMS_TYPE_PHONE_TABLE))
#define EDWINSPIRE_USMS_PHONE_TABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), EDWINSPIRE_USMS_TYPE_PHONE_TABLE, edwinspireuSMSPhoneTableClass))

typedef struct _edwinspireuSMSPhoneTable edwinspireuSMSPhoneTable;
typedef struct _edwinspireuSMSPhoneTableClass edwinspireuSMSPhoneTableClass;
typedef struct _edwinspireuSMSPhoneTablePrivate edwinspireuSMSPhoneTablePrivate;

typedef enum  {
	EDWINSPIRE_USMS_CALL_ACTION_Ignore,
	EDWINSPIRE_USMS_CALL_ACTION_Answer,
	EDWINSPIRE_USMS_CALL_ACTION_Refuse
} edwinspireuSMSCallAction;

typedef enum  {
	EDWINSPIRE_USMS_PROCESS_CTRL_None,
	EDWINSPIRE_USMS_PROCESS_CTRL_Run,
	EDWINSPIRE_USMS_PROCESS_CTRL_Running,
	EDWINSPIRE_USMS_PROCESS_CTRL_Sleep,
	EDWINSPIRE_USMS_PROCESS_CTRL_Sleeping,
	EDWINSPIRE_USMS_PROCESS_CTRL_Restart,
	EDWINSPIRE_USMS_PROCESS_CTRL_Restarting,
	EDWINSPIRE_USMS_PROCESS_CTRL_Kill,
	EDWINSPIRE_USMS_PROCESS_CTRL_Killed
} edwinspireuSMSProcessCtrl;

typedef enum  {
	EDWINSPIRE_USMS_PROCESS_SMS_OUT_None = 0,
	EDWINSPIRE_USMS_PROCESS_SMS_OUT_Locked = 1,
	EDWINSPIRE_USMS_PROCESS_SMS_OUT_Sent = 2,
	EDWINSPIRE_USMS_PROCESS_SMS_OUT_Fail = 3,
	EDWINSPIRE_USMS_PROCESS_SMS_OUT_Disallowed = 4,
	EDWINSPIRE_USMS_PROCESS_SMS_OUT_WaitingToBeSentByNextPort = 5,
	EDWINSPIRE_USMS_PROCESS_SMS_OUT_SentIncomplete = 6,
	EDWINSPIRE_USMS_PROCESS_SMS_OUT_LifetimeExpired = 7,
	EDWINSPIRE_USMS_PROCESS_SMS_OUT_AllAttemptsFailToDeliverAutoProvider = 8,
	EDWINSPIRE_USMS_PROCESS_SMS_OUT_AllAttemptsFailDelivery = 9,
	EDWINSPIRE_USMS_PROCESS_SMS_OUT_AwaitingDeliveryRetry = 10
} edwinspireuSMSProcessSMSOut;

struct _edwinspireuSMSDevice {
	edwinspireGSMMODEMModemGSM parent_instance;
	edwinspireuSMSDevicePrivate * priv;
	guint TimeWindowSleep;
	gint IdPort;
};

struct _edwinspireuSMSDeviceClass {
	edwinspireGSMMODEMModemGSMClass parent_class;
};

struct _edwinspireuSMSXmlDatas {
	GObject parent_instance;
	edwinspireuSMSXmlDatasPrivate * priv;
	gboolean FieldTextToBase64;
};

struct _edwinspireuSMSXmlDatasClass {
	GObjectClass parent_class;
};

struct _edwinspireuSMSXmlRow {
	edwinspireuSMSXmlDatas parent_instance;
	edwinspireuSMSXmlRowPrivate * priv;
	gchar* Name;
};

struct _edwinspireuSMSXmlRowClass {
	edwinspireuSMSXmlDatasClass parent_class;
};

struct _edwinspireuSMSSerialPortConf {
	edwinspirePortsConfigure parent_instance;
	edwinspireuSMSSerialPortConfPrivate * priv;
};

struct _edwinspireuSMSSerialPortConfClass {
	edwinspirePortsConfigureClass parent_class;
};

struct _edwinspireuSMSuSMSDataBase {
	GObject parent_instance;
	edwinspireuSMSuSMSDataBasePrivate * priv;
};

struct _edwinspireuSMSuSMSDataBaseClass {
	GObjectClass parent_class;
};

struct _edwinspireuSMSuSMSServer {
	GObject parent_instance;
	edwinspireuSMSuSMSServerPrivate * priv;
};

struct _edwinspireuSMSuSMSServerClass {
	GObjectClass parent_class;
};

struct _edwinspireuSMSTableRowPostgres {
	edwinspirepgSQLConnectionParameters Parameters;
	gchar* Note;
	gint64 Id;
	gboolean Enable;
};

struct _edwinspireuSMSTablePostgres {
	GObject parent_instance;
	edwinspireuSMSTablePostgresPrivate * priv;
};

struct _edwinspireuSMSTablePostgresClass {
	GObjectClass parent_class;
};

struct _edwinspireuSMSProcessControldb {
	GObject parent_instance;
	edwinspireuSMSProcessControldbPrivate * priv;
	gint Id;
	gchar* Date;
	edwinspireuSMSProcessCtrl Ctrl;
	gchar* Note;
};

struct _edwinspireuSMSProcessControldbClass {
	GObjectClass parent_class;
};

struct _edwinspireuSMSTableProcessControl {
	GObject parent_instance;
	edwinspireuSMSTableProcessControlPrivate * priv;
};

struct _edwinspireuSMSTableProcessControlClass {
	GObjectClass parent_class;
};

struct _edwinspireuSMSTableSerialPort {
	GObject parent_instance;
	edwinspireuSMSTableSerialPortPrivate * priv;
};

struct _edwinspireuSMSTableSerialPortClass {
	GObjectClass parent_class;
};

struct _edwinspireuSMSSQLFunReturn {
	GObject parent_instance;
	edwinspireuSMSSQLFunReturnPrivate * priv;
	gint Return;
	gchar* Msg;
};

struct _edwinspireuSMSSQLFunReturnClass {
	GObjectClass parent_class;
};

struct _edwinspireuSMSPostgreSQLConnection {
	edwinspirepgSQLPostgreSqldb parent_instance;
	edwinspireuSMSPostgreSQLConnectionPrivate * priv;
};

struct _edwinspireuSMSPostgreSQLConnectionClass {
	edwinspirepgSQLPostgreSqldbClass parent_class;
};

struct _edwinspireuSMSPostgresuSMS {
	edwinspirepgSQLPostgreSqldb parent_instance;
	edwinspireuSMSPostgresuSMSPrivate * priv;
};

struct _edwinspireuSMSPostgresuSMSClass {
	edwinspirepgSQLPostgreSqldbClass parent_class;
};

struct _edwinspireuSMSTableProvider {
	edwinspireuSMSPostgresuSMS parent_instance;
	edwinspireuSMSTableProviderPrivate * priv;
};

struct _edwinspireuSMSTableProviderClass {
	edwinspireuSMSPostgresuSMSClass parent_class;
};

struct _edwinspireuSMSSMSOutRow {
	edwinspireGSMMODEMSubmit parent_instance;
	edwinspireuSMSSMSOutRowPrivate * priv;
};

struct _edwinspireuSMSSMSOutRowClass {
	edwinspireGSMMODEMSubmitClass parent_class;
};

struct _edwinspireuSMSTableCallIn {
	edwinspireuSMSPostgresuSMS parent_instance;
	edwinspireuSMSTableCallInPrivate * priv;
};

struct _edwinspireuSMSTableCallInClass {
	edwinspireuSMSPostgresuSMSClass parent_class;
};

struct _edwinspireuSMSTableIncomingCalls {
	edwinspireuSMSPostgreSQLConnection parent_instance;
	edwinspireuSMSTableIncomingCallsPrivate * priv;
};

struct _edwinspireuSMSTableIncomingCallsClass {
	edwinspireuSMSPostgreSQLConnectionClass parent_class;
};

struct _edwinspireuSMSTableContacts {
	edwinspireuSMSPostgreSQLConnection parent_instance;
	edwinspireuSMSTableContactsPrivate * priv;
};

struct _edwinspireuSMSTableContactsClass {
	edwinspireuSMSPostgreSQLConnectionClass parent_class;
};

struct _edwinspireuSMSTableSMSIn {
	edwinspireuSMSPostgreSQLConnection parent_instance;
	edwinspireuSMSTableSMSInPrivate * priv;
};

struct _edwinspireuSMSTableSMSInClass {
	edwinspireuSMSPostgreSQLConnectionClass parent_class;
};

struct _edwinspireuSMSTableSMSOut {
	edwinspireuSMSPostgresuSMS parent_instance;
	edwinspireuSMSTableSMSOutPrivate * priv;
};

struct _edwinspireuSMSTableSMSOutClass {
	edwinspireuSMSPostgresuSMSClass parent_class;
};

struct _edwinspireuSMSPhoneTableRow {
	gint IdPhone;
	gint IdContact;
	gboolean Enable;
	gchar* Phone;
	gint Type;
	gint IdProvider;
	gchar* Note;
	gdouble GeoX;
	gdouble GeoY;
	gchar* IdAddress;
	gchar* PhoneExt;
	gint UbiPhone;
	gchar* Address;
	gchar* TimeStamp;
};

struct _edwinspireuSMSProviderTable {
	edwinspireuSMSPostgreSQLConnection parent_instance;
	edwinspireuSMSProviderTablePrivate * priv;
};

struct _edwinspireuSMSProviderTableClass {
	edwinspireuSMSPostgreSQLConnectionClass parent_class;
};

struct _edwinspireuSMSPhoneTable {
	edwinspireuSMSPostgreSQLConnection parent_instance;
	edwinspireuSMSPhoneTablePrivate * priv;
};

struct _edwinspireuSMSPhoneTableClass {
	edwinspireuSMSPostgreSQLConnectionClass parent_class;
};


#define EDWINSPIRE_USMS_VERSION "0.1.2012.10.22"
GType edwinspire_usms_call_action_get_type (void) G_GNUC_CONST;
GType edwinspire_usms_process_ctrl_get_type (void) G_GNUC_CONST;
GType edwinspire_usms_process_sms_out_get_type (void) G_GNUC_CONST;
GType edwinspire_usms_device_get_type (void) G_GNUC_CONST;
GType edwinspire_usms_serial_port_conf_get_type (void) G_GNUC_CONST;
void edwinspire_usms_device_SetPort (edwinspireuSMSDevice* self, edwinspireuSMSSerialPortConf* sp);
void edwinspire_usms_device_DetectCallID (edwinspireuSMSDevice* self, const gchar* phone);
void edwinspire_usms_device_Kill (edwinspireuSMSDevice* self);
gint64 edwinspire_usms_device_log (edwinspireuSMSDevice* self, GLogLevelFlags level, const gchar* log);
edwinspireuSMSDevice* edwinspire_usms_device_new (void);
edwinspireuSMSDevice* edwinspire_usms_device_construct (GType object_type);
edwinspireuSMSProcessCtrl edwinspire_usms_device_get_Ctrl (edwinspireuSMSDevice* self);
void edwinspire_usms_device_set_Ctrl (edwinspireuSMSDevice* self, edwinspireuSMSProcessCtrl value);
GType edwinspire_usms_xml_datas_get_type (void) G_GNUC_CONST;
edwinspireuSMSXmlDatas* edwinspire_usms_xml_datas_new (void);
edwinspireuSMSXmlDatas* edwinspire_usms_xml_datas_construct (GType object_type);
xmlDoc* edwinspire_usms_xml_datas_XmlDocBuild (xmlNode* rootNode);
xmlNode* edwinspire_usms_xml_datas_Node (const gchar* Name);
gchar* edwinspire_usms_xml_datas_StringToBase64 (const gchar* textstring);
gchar* edwinspire_usms_xml_datas_XmlDocToString (xmlNode* rootNode);
GType edwinspire_usms_xml_row_get_type (void) G_GNUC_CONST;
edwinspireuSMSXmlRow* edwinspire_usms_xml_row_new (void);
edwinspireuSMSXmlRow* edwinspire_usms_xml_row_construct (GType object_type);
void edwinspire_usms_xml_row_clear (edwinspireuSMSXmlRow* self);
void edwinspire_usms_xml_row_addFieldString (edwinspireuSMSXmlRow* self, const gchar* name, const gchar* value, gboolean asBase64);
xmlNode* edwinspire_usms_xml_row_Row (edwinspireuSMSXmlRow* self);
void edwinspire_usms_xml_row_addFieldInt (edwinspireuSMSXmlRow* self, const gchar* name, gint value);
void edwinspire_usms_xml_row_addFieldDouble (edwinspireuSMSXmlRow* self, const gchar* name, gdouble value);
void edwinspire_usms_xml_row_addFieldBool (edwinspireuSMSXmlRow* self, const gchar* name, gboolean value);
void edwinspire_usms_xml_row_addFieldUint (edwinspireuSMSXmlRow* self, const gchar* name, guint value);
void edwinspire_usms_xml_row_addFieldInt64 (edwinspireuSMSXmlRow* self, const gchar* name, gint64 value);
edwinspireuSMSSerialPortConf* edwinspire_usms_serial_port_conf_new (void);
edwinspireuSMSSerialPortConf* edwinspire_usms_serial_port_conf_construct (GType object_type);
edwinspireuSMSSerialPortConf* edwinspire_usms_serial_port_conf_new_with_args (gint id, gboolean enable, const gchar* port, gint baudrate, gint databits, edwinspirePortsParity parity, edwinspirePortsStopBits stopbits, edwinspirePortsHandShaking HS, const gchar* note, GeeArrayList* llevel);
edwinspireuSMSSerialPortConf* edwinspire_usms_serial_port_conf_construct_with_args (GType object_type, gint id, gboolean enable, const gchar* port, gint baudrate, gint databits, edwinspirePortsParity parity, edwinspirePortsStopBits stopbits, edwinspirePortsHandShaking HS, const gchar* note, GeeArrayList* llevel);
gint edwinspire_usms_serial_port_conf_get_Id (edwinspireuSMSSerialPortConf* self);
void edwinspire_usms_serial_port_conf_set_Id (edwinspireuSMSSerialPortConf* self, gint value);
const gchar* edwinspire_usms_serial_port_conf_get_Note (edwinspireuSMSSerialPortConf* self);
void edwinspire_usms_serial_port_conf_set_Note (edwinspireuSMSSerialPortConf* self, const gchar* value);
GeeArrayList* edwinspire_usms_serial_port_conf_get_LogLevel (edwinspireuSMSSerialPortConf* self);
void edwinspire_usms_serial_port_conf_set_LogLevel (edwinspireuSMSSerialPortConf* self, GeeArrayList* value);
GType edwinspire_usms_usms_data_base_get_type (void) G_GNUC_CONST;
edwinspireuSMSuSMSDataBase* edwinspire_usms_usms_data_base_new (void);
edwinspireuSMSuSMSDataBase* edwinspire_usms_usms_data_base_construct (GType object_type);
void edwinspire_usms_usms_data_base_Open (edwinspireuSMSuSMSDataBase* self);
gint64 edwinspire_usms_usms_data_base_Insert (edwinspireuSMSuSMSDataBase* self, edwinspireuSMSSerialPortConf* row);
gboolean edwinspire_usms_usms_data_base_get_isOpen (edwinspireuSMSuSMSDataBase* self);
GType edwinspire_usms_usms_server_get_type (void) G_GNUC_CONST;
edwinspireuSMSuSMSServer* edwinspire_usms_usms_server_new (void);
edwinspireuSMSuSMSServer* edwinspire_usms_usms_server_construct (GType object_type);
GeeHashMap* edwinspire_usms_usms_server_VirtualUrls (void);
edwinspireuHttpResponse* edwinspire_usms_usms_server_ResponseToVirtualRequest (edwinspireuHttpRequest* request);
void edwinspire_usms_usms_server_RequestVirtualPageHandler (edwinspireuSMSuSMSServer* self, edwinspireuHttpuHttpServer* server, edwinspireuHttpRequest* request, GDataOutputStream* dos);
void edwinspire_usms_usms_server_Run (edwinspireuSMSuSMSServer* self);
#define EDWINSPIRE_USMS_FILECONF "usmsd.sqlite"
GType edwinspire_usms_table_row_postgres_get_type (void) G_GNUC_CONST;
edwinspireuSMSTableRowPostgres* edwinspire_usms_table_row_postgres_dup (const edwinspireuSMSTableRowPostgres* self);
void edwinspire_usms_table_row_postgres_free (edwinspireuSMSTableRowPostgres* self);
void edwinspire_usms_table_row_postgres_copy (const edwinspireuSMSTableRowPostgres* self, edwinspireuSMSTableRowPostgres* dest);
void edwinspire_usms_table_row_postgres_destroy (edwinspireuSMSTableRowPostgres* self);
void edwinspire_usms_table_row_postgres_init (edwinspireuSMSTableRowPostgres *self);
GType edwinspire_usms_table_postgres_get_type (void) G_GNUC_CONST;
edwinspireuSMSTablePostgres* edwinspire_usms_table_postgres_new (void);
edwinspireuSMSTablePostgres* edwinspire_usms_table_postgres_construct (GType object_type);
gint64 edwinspire_usms_table_postgres_InsertRow (edwinspireuSMSTableRowPostgres* row);
gint64 edwinspire_usms_table_postgres_UpdateFromWeb (GeeHashMap* Form);
gint64 edwinspire_usms_table_postgres_UpdateRow (edwinspireuSMSTableRowPostgres* row);
gchar* edwinspire_usms_table_postgres_LastRowEnabledXML (void);
void edwinspire_usms_table_postgres_LastRowEnabled (edwinspireuSMSTableRowPostgres* result);
GType edwinspire_usms_process_controldb_get_type (void) G_GNUC_CONST;
edwinspireuSMSProcessControldb* edwinspire_usms_process_controldb_new (gint id, edwinspireuSMSProcessCtrl ctrl, const gchar* note, const gchar* date);
edwinspireuSMSProcessControldb* edwinspire_usms_process_controldb_construct (GType object_type, gint id, edwinspireuSMSProcessCtrl ctrl, const gchar* note, const gchar* date);
edwinspireuSMSProcessControldb* edwinspire_usms_process_controldb_new_from_string (const gchar* id, const gchar* ctrl, const gchar* note, const gchar* date);
edwinspireuSMSProcessControldb* edwinspire_usms_process_controldb_construct_from_string (GType object_type, const gchar* id, const gchar* ctrl, const gchar* note, const gchar* date);
GType edwinspire_usms_table_process_control_get_type (void) G_GNUC_CONST;
edwinspireuSMSTableProcessControl* edwinspire_usms_table_process_control_new (void);
edwinspireuSMSTableProcessControl* edwinspire_usms_table_process_control_construct (GType object_type);
gint64 edwinspire_usms_table_process_control_Insert (edwinspireuSMSProcessControldb* row);
gboolean edwinspire_usms_table_process_control_Update (edwinspireuSMSProcessControldb* contrl);
edwinspireuSMSProcessControldb* edwinspire_usms_table_process_control_RowById (gint Id);
edwinspireuSMSProcessControldb* edwinspire_usms_table_process_control_Last (void);
GeeArrayList* edwinspire_usms_table_process_control_All (void);
GType edwinspire_usms_table_serial_port_get_type (void) G_GNUC_CONST;
edwinspireuSMSTableSerialPort* edwinspire_usms_table_serial_port_new (void);
edwinspireuSMSTableSerialPort* edwinspire_usms_table_serial_port_construct (GType object_type);
gchar* edwinspire_usms_table_serial_port_AllXml (void);
GeeArrayList* edwinspire_usms_table_serial_port_All (void);
GeeArrayList* edwinspire_usms_table_serial_port_Enables (void);
gint64 edwinspire_usms_table_serial_port_InsertUpdateFromWeb (GeeHashMap* postData);
gint64 edwinspire_usms_table_serial_port_InsertUpdate (edwinspireuSMSSerialPortConf* row);
gint64 edwinspire_usms_table_serial_port_Insert (edwinspireuSMSSerialPortConf* row);
gboolean edwinspire_usms_table_serial_port_Update (edwinspireuSMSSerialPortConf* row);
gboolean edwinspire_usms_table_serial_port_Delete (guint IdPort);
GType edwinspire_usms_sql_fun_return_get_type (void) G_GNUC_CONST;
edwinspireuSMSSQLFunReturn* edwinspire_usms_sql_fun_return_new (gint r, const gchar* message);
edwinspireuSMSSQLFunReturn* edwinspire_usms_sql_fun_return_construct (GType object_type, gint r, const gchar* message);
gchar* edwinspire_usms_sql_fun_return_Xml (edwinspireuSMSSQLFunReturn* self);
GType edwinspire_usms_postgre_sql_connection_get_type (void) G_GNUC_CONST;
void edwinspire_usms_postgre_sql_connection_GetParamCnx (edwinspireuSMSPostgreSQLConnection* self);
edwinspireuSMSPostgreSQLConnection* edwinspire_usms_postgre_sql_connection_new (void);
edwinspireuSMSPostgreSQLConnection* edwinspire_usms_postgre_sql_connection_construct (GType object_type);
GType edwinspire_usms_postgresu_sms_get_type (void) G_GNUC_CONST;
edwinspireuSMSPostgresuSMS* edwinspire_usms_postgresu_sms_new (void);
edwinspireuSMSPostgresuSMS* edwinspire_usms_postgresu_sms_construct (GType object_type);
void edwinspire_usms_postgresu_sms_GetParamCnx (edwinspireuSMSPostgresuSMS* self);
gboolean edwinspire_usms_postgresu_sms_fun_portmodem_update (edwinspireuSMSPostgresuSMS* self, gint inidport, const gchar* inport, const gchar* incimi, const gchar* inimei, const gchar* inmanufacturer, const gchar* inmodel, const gchar* inrevision);
gint edwinspire_usms_postgresu_sms_fun_currentportsproviders_insertupdate (edwinspireuSMSPostgresuSMS* self, gint inidport, const gchar* inport, const gchar* incimi, const gchar* inimei);
GType edwinspire_usms_table_provider_get_type (void) G_GNUC_CONST;
edwinspireuSMSTableProvider* edwinspire_usms_table_provider_new (void);
edwinspireuSMSTableProvider* edwinspire_usms_table_provider_construct (GType object_type);
gint edwinspire_usms_table_provider_IdProviderFromCIMI (edwinspireuSMSTableProvider* self, const gchar* cimi);
GType edwinspire_usms_sms_out_row_get_type (void) G_GNUC_CONST;
edwinspireuSMSSMSOutRow* edwinspire_usms_sms_out_row_new (void);
edwinspireuSMSSMSOutRow* edwinspire_usms_sms_out_row_construct (GType object_type);
edwinspirePDUDCS_MESSAGE_CLASS edwinspire_usms_sms_out_row_get_MessageClass (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_MessageClass (edwinspireuSMSSMSOutRow* self, edwinspirePDUDCS_MESSAGE_CLASS value);
gboolean edwinspire_usms_sms_out_row_get_enableMessageClass (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_enableMessageClass (edwinspireuSMSSMSOutRow* self, gboolean value);
gboolean edwinspire_usms_sms_out_row_get_StatusReport (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_StatusReport (edwinspireuSMSSMSOutRow* self, gboolean value);
gint edwinspire_usms_sms_out_row_get_MaxSlices (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_MaxSlices (edwinspireuSMSSMSOutRow* self, gint value);
GDateTime* edwinspire_usms_sms_out_row_get_dateload (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_dateload (edwinspireuSMSSMSOutRow* self, GDateTime* value);
gint edwinspire_usms_sms_out_row_get_idprovider (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_idprovider (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_idsmstype (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_idsmstype (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_idphone (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_idphone (edwinspireuSMSSMSOutRow* self, gint value);
const gchar* edwinspire_usms_sms_out_row_get_phone (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_phone (edwinspireuSMSSMSOutRow* self, const gchar* value);
GDateTime* edwinspire_usms_sms_out_row_get_datetosend (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_datetosend (edwinspireuSMSSMSOutRow* self, GDateTime* value);
GDateTime* edwinspire_usms_sms_out_row_get_dateprocess (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_dateprocess (edwinspireuSMSSMSOutRow* self, GDateTime* value);
gint edwinspire_usms_sms_out_row_get_process (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_process (edwinspireuSMSSMSOutRow* self, gint value);
const gchar* edwinspire_usms_sms_out_row_get_note (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_note (edwinspireuSMSSMSOutRow* self, const gchar* value);
gint edwinspire_usms_sms_out_row_get_priority (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_priority (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_attempts (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_attempts (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_idprovidersent (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_idprovidersent (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_slices (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_slices (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_slicessent (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_slicessent (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_messageclass (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_messageclass (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_idport (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_idport (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_flag1 (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_flag1 (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_flag2 (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_flag2 (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_flag3 (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_flag3 (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_flag4 (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_flag4 (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_flag5 (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_flag5 (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_retryonfail (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_retryonfail (edwinspireuSMSSMSOutRow* self, gint value);
gint edwinspire_usms_sms_out_row_get_maxtimelive (edwinspireuSMSSMSOutRow* self);
void edwinspire_usms_sms_out_row_set_maxtimelive (edwinspireuSMSSMSOutRow* self, gint value);
GType edwinspire_usms_table_call_in_get_type (void) G_GNUC_CONST;
edwinspireuSMSTableCallIn* edwinspire_usms_table_call_in_new (void);
edwinspireuSMSTableCallIn* edwinspire_usms_table_call_in_construct (GType object_type);
gint edwinspire_usms_table_call_in_fun_incomingcalls_insert_online (edwinspireuSMSTableCallIn* self, gint inidport, edwinspireuSMSCallAction incallaction, const gchar* inphone, const gchar* innote);
GType edwinspire_usms_table_incoming_calls_get_type (void) G_GNUC_CONST;
edwinspireuSMSTableIncomingCalls* edwinspire_usms_table_incoming_calls_new (void);
edwinspireuSMSTableIncomingCalls* edwinspire_usms_table_incoming_calls_construct (GType object_type);
gchar* edwinspire_usms_table_incoming_calls_fun_view_incomingcalls_xml (edwinspireuSMSTableIncomingCalls* self, const gchar* datestart, const gchar* dateend, gboolean fieldtextasbase64);
GType edwinspire_usms_table_contacts_get_type (void) G_GNUC_CONST;
edwinspireuSMSTableContacts* edwinspire_usms_table_contacts_new (void);
edwinspireuSMSTableContacts* edwinspire_usms_table_contacts_construct (GType object_type);
gchar* edwinspire_usms_table_contacts_fun_contacts_table_xml_from_hashmap (edwinspireuSMSTableContacts* self, GeeHashMap* data, gboolean fieldtextasbase64);
gchar* edwinspire_usms_table_contacts_fun_contacts_table_xml (edwinspireuSMSTableContacts* self, gint inidcontact, gboolean inenable, const gchar* intitle, const gchar* infirstname, const gchar* inlastname, gint ingender, const gchar* inbirthday, gint intypeofid, const gchar* inidentification, const gchar* inweb, const gchar* inemail1, const gchar* inemail2, const gchar* inidaddress, const gchar* innote, gboolean fieldtextasbase64);
gchar* edwinspire_usms_table_contacts_byId_Xml (edwinspireuSMSTableContacts* self, gint idcontact, gboolean fieldtextasbase64);
gchar* edwinspire_usms_table_contacts_NameAndId_All_Xml (edwinspireuSMSTableContacts* self, gboolean fieldtextasbase64);
GeeHashMap* edwinspire_usms_table_contacts_NameAndId_All (edwinspireuSMSTableContacts* self);
GType edwinspire_usms_table_sms_in_get_type (void) G_GNUC_CONST;
edwinspireuSMSTableSMSIn* edwinspire_usms_table_sms_in_new (void);
edwinspireuSMSTableSMSIn* edwinspire_usms_table_sms_in_construct (GType object_type);
gchar* edwinspire_usms_table_sms_in_fun_view_smsin_table_filter_xml (edwinspireuSMSTableSMSIn* self, const gchar* start, const gchar* end, gint rows, gboolean fieldtextasbase64);
gint edwinspire_usms_table_sms_in_fun_smsin_insert (edwinspireuSMSTableSMSIn* self, gint inidport, edwinspireGSMMODEMSMS_Status instatus, edwinspirePDUDatetime* indatesms, const gchar* inphone, const gchar* inmsj, const gchar* innote);
GType edwinspire_usms_table_sms_out_get_type (void) G_GNUC_CONST;
edwinspireuSMSTableSMSOut* edwinspire_usms_table_sms_out_new (void);
edwinspireuSMSTableSMSOut* edwinspire_usms_table_sms_out_construct (GType object_type);
edwinspireuSMSSMSOutRow* edwinspire_usms_table_sms_out_ToSend (edwinspireuSMSTableSMSOut* self, gint IdProvider);
gchar* edwinspire_usms_table_sms_out_fun_view_smsout_table_filter_xml (edwinspireuSMSTableSMSOut* self, const gchar* start, const gchar* end, gint rows, gboolean fieldtextasbase64);
gint edwinspire_usms_table_sms_out_fun_smsout_insert (edwinspireuSMSTableSMSOut* self, gint inidphone, const gchar* inphone, const gchar* inmessage, gint inidprovider, gint inidsmstype, gint inpriority, GDateTime* indatetosend, gboolean inenablemsgclass, edwinspirePDUDCS_MESSAGE_CLASS inmsgclass, const gchar* innote);
gint edwinspire_usms_table_sms_out_fun_smsout_updatestatus (edwinspireuSMSTableSMSOut* self, gint inidsmsout, edwinspireuSMSProcessSMSOut inprocess, gint inidprovidersent, gint inslices, gint inslicessent, const gchar* innote);
GType edwinspire_usms_phone_table_row_get_type (void) G_GNUC_CONST;
edwinspireuSMSPhoneTableRow* edwinspire_usms_phone_table_row_dup (const edwinspireuSMSPhoneTableRow* self);
void edwinspire_usms_phone_table_row_free (edwinspireuSMSPhoneTableRow* self);
void edwinspire_usms_phone_table_row_copy (const edwinspireuSMSPhoneTableRow* self, edwinspireuSMSPhoneTableRow* dest);
void edwinspire_usms_phone_table_row_destroy (edwinspireuSMSPhoneTableRow* self);
void edwinspire_usms_phone_table_row_init (edwinspireuSMSPhoneTableRow *self);
GType edwinspire_usms_provider_table_get_type (void) G_GNUC_CONST;
gchar* edwinspire_usms_provider_table_fun_provider_edit_xml_from_hashmap (edwinspireuSMSProviderTable* self, GeeHashMap* data, gboolean fieldtextasbase64);
gchar* edwinspire_usms_provider_table_fun_provider_edit_xml (edwinspireuSMSProviderTable* self, gint inidprovider, gboolean inenable, const gchar* incimi, const gchar* inname, const gchar* innote, const gchar* ints, gboolean fieldtextasbase64);
gchar* edwinspire_usms_provider_table_fun_view_provider_table_xml (edwinspireuSMSProviderTable* self, gboolean fieldtextasbase64);
gchar* edwinspire_usms_provider_table_idname_Xml (edwinspireuSMSProviderTable* self, gboolean fieldtextasbase64);
edwinspireuSMSProviderTable* edwinspire_usms_provider_table_new (void);
edwinspireuSMSProviderTable* edwinspire_usms_provider_table_construct (GType object_type);
GType edwinspire_usms_phone_table_get_type (void) G_GNUC_CONST;
edwinspireuSMSXmlRow* edwinspire_usms_phone_table_PhoneTableRowNodeXml (edwinspireuSMSPhoneTableRow* row);
gchar* edwinspire_usms_phone_table_fun_phones_table_xml_from_hashmap (edwinspireuSMSPhoneTable* self, GeeHashMap* data, gboolean fieldtextasbase64);
gchar* edwinspire_usms_phone_table_fun_phones_table_xml (edwinspireuSMSPhoneTable* self, gint inidphone, gint inidcontact, gboolean inenable, const gchar* inphone, gint intypephone, gint inidprovider, gdouble ingeox, gdouble ingeoy, const gchar* inphone_ext, const gchar* inidaddress, const gchar* inaddress, gint inubiphone, const gchar* innote, const gchar* ints, gboolean fieldtextasbase64);
gchar* edwinspire_usms_phone_table_byId_Xml (edwinspireuSMSPhoneTable* self, gint idphone, gboolean fieldtextasbase64);
gchar* edwinspire_usms_phone_table_byIdContactXml (edwinspireuSMSPhoneTable* self, gint idcontact);
gchar* edwinspire_usms_phone_table_byIdContact_Xml (edwinspireuSMSPhoneTable* self, gint idcontact, gboolean fieldtextasbase64);
edwinspireuSMSPhoneTableRow* edwinspire_usms_phone_table_byIdContact (edwinspireuSMSPhoneTable* self, gint idcontact, int* result_length1);
edwinspireuSMSPhoneTable* edwinspire_usms_phone_table_new (void);
edwinspireuSMSPhoneTable* edwinspire_usms_phone_table_construct (GType object_type);


G_END_DECLS

#endif
